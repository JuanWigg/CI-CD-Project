pipeline {
    agent { label 'slave'}

        stages {
            stage ('Test') {
                steps {
                    script{
                        sh ''' 
                            echo "Clonning the repo..."
                            git clone https://github.com/JuanWigg/CI-CD-Project.git
                            cd CI-CD-Project/App
                            echo "Running tests"
                            mvn clean compile test
                            echo "Tests runs succesfully!"
                        '''
                    }              
                }
            }

            stage ('Build') {
                steps {
                    script{
                        
                        sh '''
                            cd CI-CD-Project/App
                            echo "Building the JAR file..."
                            mvn -f pom.xml clean install -Dmaven.test.skip=true
                            echo "JAR file build!"
                        '''
                        
                    }  
                }
            }
  
            stage ('Create and Upload Docker Image') {
                steps {
                    script{
                        withCredentials([string(credentialsId: 'ECR_REPO', variable: 'ECR_REPO')]) { //set SECRET with the credential content
                            sh 'whoami'
                            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO'
                            sh '''
                                echo "Creating Docker image..."
                                cd CI-CD-Project/App
                                docker build -t spring-boot-docker .
                                echo "Docker Image Build!"
                                echo "Tagging image.."
                            '''
                            sh 'docker tag spring-boot-docker:latest '${ECR_REPO}'/spring-boot-docker:latest'
                            sh 'echo Uploading image...'
                            sh 'docker push '${ECR_REPO}'/spring-boot-docker:latest'
                            sh 'echo Image uploaded!'
                        }
                        
                        
                    }
                    
                }

            }
        }
        post {
            always {
                echo 'Jobs finished!'
                deleteDir() /* clean up our workspace */
            }
            success {
                echo 'Trigger deploy job!'
            }  
            failure {
                echo 'Something failed..'
            }

    }

}